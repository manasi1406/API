Mongodb.js



const {MongoClient}=require('mongodb'); const url="mongodb://localhost:27017" const database='student';
const client=new MongoClient(url);



const dbConnect=async()=>{

const result=await client.connect(); const db=await result.db(database); return db.collection('profile');
}

module.exports=dbConnect;





index.js


const dbConnect=require('./mongodb') const express=require('express');
const { response } = require('express');

const app=express(); app.use(express.json())



//get API

app.get('/getData',async(req,res)=>{
 
let result=await dbConnect();

result=await result.find().toArray(); res.send(result);
})

//post API

app.post('/insertData',async(req,res)=>{ let result=await dbConnect();
result=await result.insertOne(req.body); res.send("Data Inserted Successfully")
})



// Put API

app.put('/updateData/:name',async(req,res)=>{ let result=await dbConnect();
result=await result.updateOne({name:req.params.name},{$set:req.body}); res.send("Data Updated Successfully")
})



//Delete API

app.delete('/deleteData/:name',async(req,res)=>{ let result=await dbConnect();
result=await result.deleteOne({name:req.params.name}) res.send("Data Deleted Successfully");
})

app.listen(3000);
 
MongoDB Compass

// Output :

Create a new Todo using POST /insertData API

  Retrieving all Todos using GET /getData API

Updating a Todo using PUT localhost:3000/updateData/Rohit API


Deleting a Todo using DELETE localhost:3000/deleteData/Rohit API 
 
Deleting a Todo using DELETE localhost:3000/deleteData/Rohit API

